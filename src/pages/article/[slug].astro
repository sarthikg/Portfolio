---
import Markdown from "@component/Markdown.astro";
import { getAllPublishedArticles } from "@facade/article";
import Layout from "@layout/Layout.astro";
import { formatDateWithDay } from "@util/date-string";
import { getReadingTime } from "@util/reading-time";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

interface Props {
  article: CollectionEntry<"article">;
}

export async function getStaticPaths() {
  const articles = await getAllPublishedArticles();
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const { title, image, date } = article.data;

const { Content } = await article.render();
---

<Layout title={`${title} // Sarthik Gupta`}>
  <article class="article">
    <div class="article__cover">
      <Image
        class="article__cover__image"
        src={image.src as ImageMetadata}
        alt={image.alt}
        width={1470}
        height={834}
      />
      <h1 class="article__cover__title">
        {title}
      </h1>
      <h4 class="article__cover__date">
        {formatDateWithDay(date)} â€¢ {getReadingTime(article.body)} min read
      </h4>
    </div>
    <main class="main main__article">
      <Markdown>
        <Content />
      </Markdown>
    </main>
  </article>
</Layout>

<style>
  /* Global Styles */
  .article {
    &__cover {
      min-height: 500px;
      height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      &__image {
        position: absolute;
        background-repeat: no-repeat;
        background-position: center center;
        background-size: cover;
        object-fit: cover;
        width: 100%;
        height: 100%;
        z-index: 1;
        filter: grayscale(0.1);
        opacity: 0.35;
      }
      &__title {
        color: var(--grey-300);
        font-family: var(--fonts-heading);
        font-size: var(--fs-4xl);
        font-weight: 700;
        z-index: 3;
      }
      &__date {
        position: absolute;
        font-family: var(--fonts-body);
        text-transform: uppercase;
        font-size: var(--fs-sm);
        font-weight: 400;
        color: var(--grey-300);
        bottom: var(--space-s);
        z-index: 3;
      }
    }
  }

  /* Desktop Overrides */
  @media (min-width: 760px) {
    .main__article {
      margin: 0 auto;
      display: flex;
      align-items: flex-start;
      flex-direction: column;
      padding-top: 0;
    }
  }
  /* Mobile Overrides */
  @media (max-width: 480px) {
    .main__article {
      padding-top: var(--space-l);
    }
  }
</style>
