---
import Snackbar from "@component/Snackbar.astro";
import { getPageInfo } from "@facade/page-info";
import Layout from "@layout/Layout.astro";

const pageInfo = await getPageInfo("contact");
---

<Layout title="Contact // Sarthik Gupta">
  <Snackbar />
  <main class="main main--contact">
    <h1 class="contact__heading">{pageInfo.data.title}</h1>
    <p class="contact__description">
      {pageInfo.data.description}
    </p>
    <form
      class="contact__form"
      method="post"
      action="/api/contact"
      data-astro-reload
    >
      <input
        class="contact__form__input"
        name="name"
        placeholder="Name"
        type="text"
        required
      />
      <input
        class="contact__form__input"
        name="email"
        placeholder="Email"
        type="email"
        required
      />
      <input
        class="contact__form__input"
        name="subject"
        placeholder="Subject"
        type="text"
        required
      />
      <textarea
        class="contact__form__input contact__form__input--textarea"
        name="message"
        placeholder="Message"></textarea>
      <button
        class="contact__form__input contact__form__input--submit"
        type="submit">Send</button
      >
    </form>
  </main>
</Layout>

<script>
  document
    .querySelector(".contact__form")
    .addEventListener("submit", async function (e) {
      e.preventDefault();
      addLoaderToButton();
      const form = e.target as HTMLFormElement;
      const response = await fetch(form.action, {
        method: form.method,
        body: new FormData(form),
      });
      if (response.status === 200) {
        form.reset();
      }
      removeLoaderFromButton();
      showSnackbar(response.status);
      hideSnackbar();
    });

  function addLoaderToButton(): void {
    const button = document.querySelector(".contact__form__input--submit");
    button.classList.add("contact__form__input--submit--active");
  }

  function removeLoaderFromButton(): void {
    const button = document.querySelector(".contact__form__input--submit");
    button.classList.remove("contact__form__input--submit--active");
  }

  function showSnackbar(status: number): void {
    const snackbar = document.querySelector(".snackbar") as HTMLDialogElement;
    if (status === 200) {
      snackbar.textContent = `Message sent! ðŸŽ‰ \r\n You should be hearing back soon.`;
      snackbar.classList.add("snackbar--success");
    } else if (status === 400) {
      snackbar.textContent =
        "Incorrect input! ðŸ˜“ \r\n Please fill all the fields & try again.";
      snackbar.classList.add("snackbar--warning");
    } else {
      snackbar.textContent =
        "Something went wrong! ðŸ˜­ \r\n Please connect using one of the social media channels.";
      snackbar.classList.add("snackbar--error");
    }
    snackbar.show();
    snackbar.blur();
  }

  function hideSnackbar(): void {
    const snackbar = document.querySelector(".snackbar") as HTMLDialogElement;
    setTimeout(() => {
      snackbar.close();
    }, 5000);
  }
</script>

<style>
  /* Global Styles */
  .contact {
    &__heading {
      font-family: var(--fonts-heading);
      font-size: var(--fs-3xl);
      font-weight: 700;
      background-image: linear-gradient(
        135deg,
        var(--teal-200-accent) 0%,
        var(--lime-100-accent) 100%
      );
      background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    &__description {
      font-size: var(--fs-md);
      color: var(--grey-400);
      margin: var(--space-s) 0;
      line-height: 2;
      font-weight: 500;
    }
    &__form {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: var(--space-l) var(--space-l) 1fr var(--space-l);
      margin-top: var(--space-l);
      gap: var(--space-s);
      flex-grow: 1;
      &__input {
        border: unset;
        padding: var(--space-2xs);
        background-color: var(--grey-900);
        border-radius: var(--radius-md);
        caret-color: var(--grey-400);
        border: 1px solid var(--grey-900);
        font-size: var(--fs-sm);
        color: var(--grey-100);
        transition: border-color var(--transition-ease-slow);
        width: 100%;
        &::placeholder {
          font-family: var(--fonts-body);
          color: var(--grey-500);
        }
        &:focus {
          outline: unset;
          border: 1px solid var(--teal-100-accent);
        }
        &[name="name"] {
          grid-row: 1 / 2;
          grid-column: 1 / 2;
        }
        &[name="email"] {
          grid-row: 1 / 2;
          grid-column: 2 / 3;
        }
        &[name="subject"] {
          grid-row: 2 / 3;
          grid-column: 1 / 3;
        }
        &--textarea {
          resize: none;
          grid-row: 3 / 4;
          grid-column: 1 / 3;
        }
        &--submit {
          cursor: pointer;
          grid-row: 4 / 5;
          grid-column: 2 / 3;
          color: var(--grey-900);
          border-color: var(--grey-300);
          background-color: var(--grey-300);
          transition: all var(--transition-ease-slow);
          &--active {
            color: var(--teal-100-accent);
            background-color: transparent;
            border-color: var(--teal-100-accent);
            &::after {
              content: " ";
              margin-left: var(--space-2xs);
              width: calc(var(--fs-sm) - 2px);
              height: calc(var(--fs-sm) - 2px);
              border: 2px solid var(--teal-100-accent);
              border-bottom-color: transparent;
              border-radius: 50%;
              display: inline-block;
              box-sizing: border-box;
              animation: rotation 1s linear infinite;
            }
          }
          &:hover {
            color: var(--teal-100-accent);
            background-color: transparent;
            border-color: var(--teal-100-accent);
          }
        }
      }
    }
  }

  /* Desktop Overrides */
  @media (min-width: 760px) {
    .main--contact {
      margin: 0 auto;
      display: flex;
      align-items: flex-start;
      flex-direction: column;
    }
    .contact {
      &__form {
        &__input {
          min-width: var(--content-3xl);
        }
      }
    }
  }
  /* Mobile Overrides */
  @media (max-width: 480px) {
    .main--contact {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
    }
    .contact {
      &__form {
        flex-grow: 1;
        &__input {
          &--textarea {
            min-height: var(--content-2xl);
          }
        }
      }
    }
  }

  @keyframes rotation {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
</style>
