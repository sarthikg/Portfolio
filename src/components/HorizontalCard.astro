---
import { formatDateWithDay } from "@util/date-string";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
  title: string;
  description: string;
  image: {
    src?: unknown; // TODO: Remove optional once Astro bug is fixed
    alt?: string; // TODO: Remove optional once Astro bug is fixed
  };
  date: Date;
  url: string;
}

const { title, description, image, date, url } = Astro.props;
---

<a class="horizontal-card" href={url}>
  <Image
    class="horizontal-card__image"
    transition:animate="none"
    src={image.src as ImageMetadata}
    alt={image.alt}
    format="avif"
  />
  <h2 class="horizontal-card__title" transition:animate="none">{title}</h2>
  <p class="horizontal-card__description">{description}</p>
  <p class="horizontal-card__metadata">
    <span class="horizontal-card__metadata__read-time">5 min read</span>
    <span class="horizontal-card__metadata__published"
      >{formatDateWithDay(date)}</span
    >
  </p>
</a>

<style>
  /* Global Styles */
  .horizontal-card {
    display: grid;
    width: 100%;
    cursor: pointer;
    grid-template-columns: 250px 1fr;
    column-gap: 20px;
    padding: var(--space-s);
    border-radius: var(--radius-md);
    background-color: transparent;
    text-decoration: unset;
    transition:
      background-color var(--transition-ease-slow),
      filter var(--transition-squish-slow),
      opacity var(--transition-ease-slow);
    &:hover {
      background-color: var(--grey-900);
      & .horizontal-card__image {
        filter: grayscale(0.4);
        opacity: 0.9;
      }
    }
    &__image {
      align-self: center;
      grid-row: 1 / 4;
      grid-column: 1 / 2;
      border-radius: var(--radius-md);
      object-fit: cover;
      filter: grayscale(0.6);
      opacity: 0.8;
      width: 250px;
      height: 128px;
      &--loading {
        animation: skeleton-loading 0.8s linear infinite alternate;
        color: transparent;
      }
    }
    &__title {
      grid-row: 1 / 2;
      grid-column: 2 / 3;
      align-self: center;
      color: var(--grey-300);
      font-size: var(--fs-base);
      font-weight: 500;
      line-height: var(--lh-1-4);
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
    }
    &__description {
      grid-row: 2 / 3;
      grid-column: 2 / 3;
      align-self: center;
      color: var(--grey-500);
      font-size: var(--fs-sm);
      height: calc(calc(var(--lh-2) * var(--fs-sm)) * 2);
      line-height: var(--lh-2);
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      line-clamp: 2;
      text-overflow: ellipsis;
      overflow: hidden;
    }
    &__metadata {
      grid-row: 3 / 4;
      grid-column: 2 / 3;
      align-self: center;
      &__read-time {
        position: relative;
        color: var(--grey-300);
        font-size: var(--fs-xs);
        text-overflow: ellipsis;
        overflow: hidden;
        line-height: var(--lh-2);
        text-transform: uppercase;
        &::after {
          content: " â€¢ ";
          color: var(--grey-300);
          font-size: var(--fs-xs);
          line-height: var(--lh-2);
        }
      }
      &__published {
        color: var(--grey-300);
        font-size: var(--fs-xs);
        text-overflow: ellipsis;
        overflow: hidden;
        line-height: var(--lh-2);
        text-transform: uppercase;
      }
    }
  }

  @keyframes skeleton-loading {
    0% {
      background-color: var(--grey-800);
    }
    100% {
      background-color: var(--grey-900);
    }
  }

  /* Desktop Overrides */
  @media (min-width: 760px) {
  }
  /* Mobile Overrides */
  @media (max-width: 480px) {
    .horizontal-card {
      grid-template-columns: 96px 1fr;
      grid-template-rows: auto;
      row-gap: 10px;
      column-gap: 20px;
      border-radius: 0;
      background-color: var(--background);
      &__image {
        grid-row: 1 / 3;
        grid-column: 1 / 2;
        width: 96px;
        height: 86px;
      }
      &__title {
        grid-row: 1 / 2;
        grid-column: 2 / 3;
        font-size: var(--fs-base);
        height: calc(calc(var(--lh-1-4) * var(--fs-base)) * 2);
        white-space: unset;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        line-clamp: 2;
      }
      &__description {
        display: none;
      }
      &__metadata {
        font-size: var(--fs-xs);
        grid-row: 2 / 3;
        grid-column: 2 / 3;
        &__read-time {
          color: var(--grey-500);
        }
        &__published {
          color: var(--grey-500);
        }
      }
    }
  }
</style>

<script>
  function addImageLoader(): void {
    const imageEls = document.querySelectorAll(".horizontal-card__image");
    imageEls.forEach((image: HTMLImageElement) => {
      image.classList.add("horizontal-card__image--loading");
      image.onload = () => removeImageLoader(image);
    });
  }

  function removeImageLoader(image: HTMLImageElement): void {
    image.classList.remove("horizontal-card__image--loading");
  }

  document.addEventListener("astro:page-load", addImageLoader);
</script>
