---
export const prerender = false;
import type { CollectionEntry } from "astro:content";

import { formatDate, getDuration } from "@util/date-string";

interface Props {
  experience: CollectionEntry<"experience">;
}

const { experience } = Astro.props;

const { titles, location, company, companyUrl } = experience.data;
---

<ol class="career-card__list">
  {
    titles.map((title) => (
      <div
        class="career-card"
        class:list={[{ "career-card--active": !title.endDate }]}
      >
        <a class="career-card__title">{title.title}</a>
        <h3 class="career-card__subtitle">
          <a
            class="career-card__subtitle__company"
            href={companyUrl}
            target="_blank"
          >
            {company.trim()}
          </a>
          <span class="career-card__subtitle__location">{location}</span>
        </h3>
        <h3
          class="career-card__description"
          data-startDate={title.startDate}
          data-endDate={title.endDate}
        >
          {formatDate(title.startDate)} -{" "}
          {!title.endDate ? "Present" : formatDate(title.endDate)} •{" "}
          {getDuration(
            title.startDate,
            title.endDate ? new Date(title.endDate) : new Date(),
          )}
        </h3>
      </div>
    ))
  }
</ol>

<style>
  .career-card {
    display: grid;
    position: relative;
    grid-template-rows: repeat(1fr, 3);
    grid-template-columns: max-content min-content min-content;
    padding-bottom: var(--space-m);
    --dot-radius: 8px;

    &:not(:last-child)::before {
      content: "";
      position: absolute;
      left: calc(-1 * var(--space-s));
      height: 100%;
      border-left: var(--border-sm) solid var(--grey-600);
      margin-top: calc(0.5 * var(--fs-base));
    }
    &:not(:only-child)::after {
      position: absolute;
      left: calc(
        calc(-1 * var(--space-s)) +
          calc(calc(-0.5 * var(--dot-radius)) + calc(0.5 * var(--border-sm)))
      );
      content: "";
      top: calc(-0.5 * var(--dot-radius));
      background-color: var(--grey-600);
      border-radius: var(--radius-full);
      margin-top: calc(0.5 * var(--fs-base));
      height: var(--dot-radius);
      width: var(--dot-radius);
    }
    &--active {
      &::after {
        background-color: var(--grey-300) !important;
      }
    }

    &__list:not(:has(:only-child)) {
      position: relative;
      display: flex;
      flex-direction: column;
      list-style: none;
      margin-left: var(--space-s);
    }

    &__title {
      grid-row: 1 / 2;
      color: var(--grey-300);
      font-size: var(--fs-base);
      line-height: var(--lh-1-4);
      text-decoration-color: var(--grey-700);
      font-weight: 500;
    }
    &__subtitle {
      grid-row: 2 / 3;
      margin-top: var(--space-3xs);
      font-size: var(--fs-sm);
      &__company {
        text-decoration-color: var(--grey-700);
        color: var(--grey-300);
        font-weight: 500;
        transition: opacity var(--transition-ease-slow);
        &:hover {
          opacity: 0.8;
        }
        &:focus {
          opacity: 0.8;
        }
      }
      &__location {
        color: var(--grey-500);
        &::before {
          content: " • ";
          color: var(--grey-300);
        }
      }
    }
    &__description {
      grid-row: 3 / 4;
      margin-top: var(--space-3xs);
      font-size: var(--fs-sm);
      color: var(--grey-500);
    }
  }
</style>
